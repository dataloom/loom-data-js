/*
 * @flow
 */

declare module "lattice" {

  declare export type UUID = string;

  declare export type FQN = FullyQualifiedName;

  declare export type FQNObject = {|
    namespace :string;
    name :string;
  |};

  declare export class FullyQualifiedName {
    static isValid :(...args :any[]) => boolean;
    static toString :(...args :any[]) => string;
    namespace :string;
    name :string;
    getNamespace() :string;
    getName() :string;
    toObject() :FQNObject;
    toString() :string;
    valueOf() :string;
  }

  declare export type PropertyTypeObject = {|
    analyzer ?:AnalyzerType;
    datatype :string;
    description ?:string;
    id ?:UUID;
    piiField ?:boolean;
    schemas :FQNObject[];
    title :string;
    type :FQNObject;
  |};

  declare export class PropertyType {
    analyzer :?AnalyzerType;
    datatype :string;
    description :?string;
    id :?UUID;
    piiField :?boolean;
    schemas :FQN[];
    title :string;
    type :FQN;
    asImmutable() :Map<*, *>;
    toObject() :PropertyTypeObject;
    valueOf() :string;
  }

  declare export class PropertyTypeBuilder {
    build() :PropertyType;
    setAnalyzer() :PropertyTypeBuilder;
    setDataType() :PropertyTypeBuilder;
    setDescription() :PropertyTypeBuilder;
    setId() :PropertyTypeBuilder;
    setPii() :PropertyTypeBuilder;
    setSchemas() :PropertyTypeBuilder;
    setTitle() :PropertyTypeBuilder;
    setType() :PropertyTypeBuilder;
  }

  /*
   *
   * Constants / Enums
   *
   */

  declare type AnalyzerTypeEnum = {|
    METAPHONE :'METAPHONE';
    STANDARD :'STANDARD';
  |};

  declare export type AnalyzerType = $Values<AnalyzerTypeEnum>;
}
